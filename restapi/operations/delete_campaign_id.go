// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteCampaignIDHandlerFunc turns a function with the right signature into a delete campaign ID handler
type DeleteCampaignIDHandlerFunc func(DeleteCampaignIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteCampaignIDHandlerFunc) Handle(params DeleteCampaignIDParams) middleware.Responder {
	return fn(params)
}

// DeleteCampaignIDHandler interface for that can handle valid delete campaign ID params
type DeleteCampaignIDHandler interface {
	Handle(DeleteCampaignIDParams) middleware.Responder
}

// NewDeleteCampaignID creates a new http.Handler for the delete campaign ID operation
func NewDeleteCampaignID(ctx *middleware.Context, handler DeleteCampaignIDHandler) *DeleteCampaignID {
	return &DeleteCampaignID{Context: ctx, Handler: handler}
}

/*DeleteCampaignID swagger:route DELETE /campaign/{id} deleteCampaignId

DeleteCampaignID delete campaign ID API

*/
type DeleteCampaignID struct {
	Context *middleware.Context
	Handler DeleteCampaignIDHandler
}

func (o *DeleteCampaignID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteCampaignIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
