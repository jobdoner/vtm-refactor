// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteFoldersMatchIDHandlerFunc turns a function with the right signature into a delete folders match ID handler
type DeleteFoldersMatchIDHandlerFunc func(DeleteFoldersMatchIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteFoldersMatchIDHandlerFunc) Handle(params DeleteFoldersMatchIDParams) middleware.Responder {
	return fn(params)
}

// DeleteFoldersMatchIDHandler interface for that can handle valid delete folders match ID params
type DeleteFoldersMatchIDHandler interface {
	Handle(DeleteFoldersMatchIDParams) middleware.Responder
}

// NewDeleteFoldersMatchID creates a new http.Handler for the delete folders match ID operation
func NewDeleteFoldersMatchID(ctx *middleware.Context, handler DeleteFoldersMatchIDHandler) *DeleteFoldersMatchID {
	return &DeleteFoldersMatchID{Context: ctx, Handler: handler}
}

/*DeleteFoldersMatchID swagger:route DELETE /folders/match/{id} deleteFoldersMatchId

DeleteFoldersMatchID delete folders match ID API

*/
type DeleteFoldersMatchID struct {
	Context *middleware.Context
	Handler DeleteFoldersMatchIDHandler
}

func (o *DeleteFoldersMatchID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteFoldersMatchIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
