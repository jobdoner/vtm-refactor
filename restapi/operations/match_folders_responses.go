// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/jobdoner/vtm-refactor/models"
)

// MatchFoldersOKCode is the HTTP code returned for type MatchFoldersOK
const MatchFoldersOKCode int = 200

/*MatchFoldersOK match folders

swagger:response matchFoldersOK
*/
type MatchFoldersOK struct {

	/*
	  In: Body
	*/
	Payload *models.MatchFoldersResp `json:"body,omitempty"`
}

// NewMatchFoldersOK creates MatchFoldersOK with default headers values
func NewMatchFoldersOK() *MatchFoldersOK {

	return &MatchFoldersOK{}
}

// WithPayload adds the payload to the match folders o k response
func (o *MatchFoldersOK) WithPayload(payload *models.MatchFoldersResp) *MatchFoldersOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the match folders o k response
func (o *MatchFoldersOK) SetPayload(payload *models.MatchFoldersResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MatchFoldersOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MatchFoldersBadRequestCode is the HTTP code returned for type MatchFoldersBadRequest
const MatchFoldersBadRequestCode int = 400

/*MatchFoldersBadRequest bad request

swagger:response matchFoldersBadRequest
*/
type MatchFoldersBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.ErrorMess `json:"body,omitempty"`
}

// NewMatchFoldersBadRequest creates MatchFoldersBadRequest with default headers values
func NewMatchFoldersBadRequest() *MatchFoldersBadRequest {

	return &MatchFoldersBadRequest{}
}

// WithPayload adds the payload to the match folders bad request response
func (o *MatchFoldersBadRequest) WithPayload(payload models.ErrorMess) *MatchFoldersBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the match folders bad request response
func (o *MatchFoldersBadRequest) SetPayload(payload models.ErrorMess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MatchFoldersBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// MatchFoldersConflictCode is the HTTP code returned for type MatchFoldersConflict
const MatchFoldersConflictCode int = 409

/*MatchFoldersConflict Match already exist

swagger:response matchFoldersConflict
*/
type MatchFoldersConflict struct {
}

// NewMatchFoldersConflict creates MatchFoldersConflict with default headers values
func NewMatchFoldersConflict() *MatchFoldersConflict {

	return &MatchFoldersConflict{}
}

// WriteResponse to the client
func (o *MatchFoldersConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

// MatchFoldersInternalServerErrorCode is the HTTP code returned for type MatchFoldersInternalServerError
const MatchFoldersInternalServerErrorCode int = 500

/*MatchFoldersInternalServerError Internal Server Error

swagger:response matchFoldersInternalServerError
*/
type MatchFoldersInternalServerError struct {
}

// NewMatchFoldersInternalServerError creates MatchFoldersInternalServerError with default headers values
func NewMatchFoldersInternalServerError() *MatchFoldersInternalServerError {

	return &MatchFoldersInternalServerError{}
}

// WriteResponse to the client
func (o *MatchFoldersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
