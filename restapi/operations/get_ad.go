// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAdHandlerFunc turns a function with the right signature into a get ad handler
type GetAdHandlerFunc func(GetAdParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAdHandlerFunc) Handle(params GetAdParams) middleware.Responder {
	return fn(params)
}

// GetAdHandler interface for that can handle valid get ad params
type GetAdHandler interface {
	Handle(GetAdParams) middleware.Responder
}

// NewGetAd creates a new http.Handler for the get ad operation
func NewGetAd(ctx *middleware.Context, handler GetAdHandler) *GetAd {
	return &GetAd{Context: ctx, Handler: handler}
}

/*GetAd swagger:route GET /ad getAd

GetAd get ad API

*/
type GetAd struct {
	Context *middleware.Context
	Handler GetAdHandler
}

func (o *GetAd) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAdParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
