// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ShowAdGroupResp show ad group resp
//
// swagger:model ShowAdGroupResp
type ShowAdGroupResp struct {

	// data
	Data *ShowAdGroupRespData `json:"data,omitempty"`
}

// Validate validates this show ad group resp
func (m *ShowAdGroupResp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShowAdGroupResp) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	if m.Data != nil {
		if err := m.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShowAdGroupResp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShowAdGroupResp) UnmarshalBinary(b []byte) error {
	var res ShowAdGroupResp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShowAdGroupRespData show ad group resp data
//
// swagger:model ShowAdGroupRespData
type ShowAdGroupRespData struct {

	// ad group
	AdGroup string `json:"adGroup,omitempty"`

	// ad group ID
	AdGroupID string `json:"adGroupID,omitempty"`

	// ad group type
	AdGroupType string `json:"adGroupType,omitempty"`

	// age
	Age string `json:"age,omitempty"`

	// bid modifier
	BidModifier string `json:"bidModifier,omitempty"`

	// campaign ID
	CampaignID int64 `json:"campaignID,omitempty"`

	// content keywords
	ContentKeywords string `json:"contentKeywords,omitempty"`

	// criterion type
	CriterionType string `json:"criterionType,omitempty"`

	// custom parameters
	CustomParameters string `json:"customParameters,omitempty"`

	// desktop bid modifier
	DesktopBidModifier string `json:"desktopBidModifier,omitempty"`

	// destination URL
	DestinationURL string `json:"destinationURL,omitempty"`

	// display network custom bid type
	DisplayNetworkCustomBidType string `json:"displayNetworkCustomBidType,omitempty"`

	// feed
	Feed string `json:"feed,omitempty"`

	// final URL suffix
	FinalURLSuffix string `json:"finalURLSuffix,omitempty"`

	// folder ID
	FolderID int64 `json:"folderID,omitempty"`

	// gender
	Gender string `json:"gender,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// location
	Location string `json:"location,omitempty"`

	// max c p c
	MaxCPC float64 `json:"maxCPC,omitempty"`

	// max c p m
	MaxCPM float64 `json:"maxCPM,omitempty"`

	// max c p v
	MaxCPV float64 `json:"maxCPV,omitempty"`

	// mobile bid modifier
	MobileBidModifier string `json:"mobileBidModifier,omitempty"`

	// nonskippable ad
	NonskippableAd string `json:"nonskippableAd,omitempty"`

	// radius
	Radius string `json:"radius,omitempty"`

	// reach
	Reach string `json:"reach,omitempty"`

	// tablet bid modifier
	TabletBidModifier string `json:"tabletBidModifier,omitempty"`

	// target c p a
	TargetCPA string `json:"targetCPA,omitempty"`

	// target c p m
	TargetCPM float64 `json:"targetCPM,omitempty"`

	// target r o a s
	TargetROAS string `json:"targetROAS,omitempty"`

	// targeting optimization
	TargetingOptimization string `json:"targetingOptimization,omitempty"`

	// top content bid modifier
	TopContentBidModifier string `json:"topContentBidModifier,omitempty"`

	// trackingtemplate
	Trackingtemplate string `json:"trackingtemplate,omitempty"`

	// tv screen bid modifier
	TvScreenBidModifier string `json:"tvScreenBidModifier,omitempty"`

	// unit
	Unit string `json:"unit,omitempty"`
}

// Validate validates this show ad group resp data
func (m *ShowAdGroupRespData) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShowAdGroupRespData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShowAdGroupRespData) UnmarshalBinary(b []byte) error {
	var res ShowAdGroupRespData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
