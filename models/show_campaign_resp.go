// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ShowCampaignResp show campaign resp
//
// swagger:model ShowCampaignResp
type ShowCampaignResp struct {

	// data
	Data *ShowCampaignRespData `json:"data,omitempty"`
}

// Validate validates this show campaign resp
func (m *ShowCampaignResp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShowCampaignResp) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	if m.Data != nil {
		if err := m.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShowCampaignResp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShowCampaignResp) UnmarshalBinary(b []byte) error {
	var res ShowCampaignResp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ShowCampaignRespData show campaign resp data
//
// swagger:model ShowCampaignRespData
type ShowCampaignRespData struct {

	// account
	Account string `json:"account,omitempty"`

	// ad rotation
	AdRotation string `json:"adRotation,omitempty"`

	// ad schedule
	AdSchedule string `json:"adSchedule,omitempty"`

	// bid strategy name
	BidStrategyName string `json:"bidStrategyName,omitempty"`

	// bid strategy type
	BidStrategyType string `json:"bidStrategyType,omitempty"`

	// budget
	Budget float64 `json:"budget,omitempty"`

	// budget type
	BudgetType string `json:"budgetType,omitempty"`

	// campaign
	Campaign string `json:"campaign,omitempty"`

	// campaign type
	CampaignType string `json:"campaignType,omitempty"`

	// delivery method
	DeliveryMethod string `json:"deliveryMethod,omitempty"`

	// dsa language
	DsaLanguage string `json:"dsaLanguage,omitempty"`

	// dsa page feeds
	DsaPageFeeds string `json:"dsaPageFeeds,omitempty"`

	// dsa targeting source
	DsaTargetingSource string `json:"dsaTargetingSource,omitempty"`

	// dsa website
	DsaWebsite string `json:"dsaWebsite,omitempty"`

	// end date
	EndDate string `json:"endDate,omitempty"`

	// exclusion method
	ExclusionMethod string `json:"exclusionMethod,omitempty"`

	// flexible reach
	FlexibleReach string `json:"flexibleReach,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// inventory type
	InventoryType string `json:"inventoryType,omitempty"`

	// languages
	Languages string `json:"languages,omitempty"`

	// networks
	Networks string `json:"networks,omitempty"`

	// start date
	StartDate string `json:"startDate,omitempty"`

	// targeting method
	TargetingMethod string `json:"targetingMethod,omitempty"`
}

// Validate validates this show campaign resp data
func (m *ShowCampaignRespData) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ShowCampaignRespData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShowCampaignRespData) UnmarshalBinary(b []byte) error {
	var res ShowCampaignRespData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
