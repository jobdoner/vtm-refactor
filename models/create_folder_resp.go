// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CreateFolderResp create folder resp
//
// swagger:model CreateFolderResp
type CreateFolderResp struct {

	// data
	Data *CreateFolderRespData `json:"data,omitempty"`
}

// Validate validates this create folder resp
func (m *CreateFolderResp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateFolderResp) validateData(formats strfmt.Registry) error {

	if swag.IsZero(m.Data) { // not required
		return nil
	}

	if m.Data != nil {
		if err := m.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateFolderResp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateFolderResp) UnmarshalBinary(b []byte) error {
	var res CreateFolderResp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// CreateFolderRespData create folder resp data
//
// swagger:model CreateFolderRespData
type CreateFolderRespData struct {

	// b l s split
	BLSSplit bool `json:"BLSSplit,omitempty"`

	// frequency
	Frequency string `json:"frequency,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// rules mask
	RulesMask string `json:"rulesMask,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this create folder resp data
func (m *CreateFolderRespData) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateFolderRespData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateFolderRespData) UnmarshalBinary(b []byte) error {
	var res CreateFolderRespData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
